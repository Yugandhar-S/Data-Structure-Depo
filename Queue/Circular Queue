#include<iostream>
using namespace std;

int Q[100], MaxSize, front, rear, cnt;

void createQueue(int num){
	MaxSize = num;
	front = 0;
	rear = -1;
	cnt = 0;
}

void Enqueue(int e){
	rear=(rear+1)%MaxSize;
	cnt++;
	Q[rear] = e;
}

int Dequeue(){
	int temp;
	cnt--;
	temp = Q[front];
	front = (front + 1) % MaxSize;
	return temp;
}


int isFull(){
	if (cnt == MaxSize)
		return 1;
	else return 0;
}

int isEmpty(){
	if (cnt == 0)
		return 1;
	else return 0;
}

void printQueue(){
	int c, i;
	i = front;
	c = 0;
	while (c < cnt){
		cout << Q[i] << " ";
		i = (i + 1) % MaxSize;
		c++;
	}
}

int main(){
	int ch, e, size;
	cout << "Enter Size" << endl;
	cin >> size;
	createQueue(size);


	do
	{
		cout << "\n1.Enqueue"
			<< "\n2.Dequeue"
			<< "\n3.Print"
			<< "\n0.Exit" << endl;
		cin >> ch;

		switch (ch)
		{
		case 1:{
			if (isFull() == 1)
				cout << "Queue is full" << endl;
			else{
				cout << "Enter number for Queue" << endl;
				cin >> e;
				Enqueue(e);
			}
			break;

		}

		case 2:{
			if (isEmpty() == 1)
				cout << "Queue is empty" << endl;
			else{
				e = Dequeue();
				cout << "The deleted number is " << e << endl;
			}
			break;
		}

		case 3:{
			if (isEmpty() == 1)
				cout << "Queue is empty" << endl;
			else
				printQueue();
			break;
		}

		case 0: {
			cout << "Exiting" << endl;
			break;
		}

		default:
			cout << "Error" << endl;
			break;
		}


	} while (ch != 0);
}
